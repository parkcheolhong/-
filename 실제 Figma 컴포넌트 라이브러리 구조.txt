좋습니다, HOUSING님.  
아래는 “나도 통역사” 관리자용 모바일 대시보드에 최적화된 **Figma 컴포넌트 라이브러리 구조 제안**입니다.  
디자이너가 Figma에서 바로 작업할 수 있도록  
**컴포넌트 분류 → Variants 구성 → 스타일 토큰 → Auto Layout 적용 방식**까지  
실제 협업과 확장에 최적화된 구조로 정리했어요. 🎨📱📘

---

## 🧱 Figma 컴포넌트 라이브러리 구조

### 1️⃣ 컴포넌트 분류

| 그룹 | 컴포넌트 이름 | 설명 |
|------|----------------|------|
| 📦 Layout | `Header`, `Footer`, `DrawerMenu`, `TabBar` | 전체 구조를 구성하는 프레임  
| 🧩 Card | `StatCard`, `FeedCard`, `UserCard`, `ChallengeCard` | 요약 정보 및 콘텐츠 카드  
| 📋 Table | `UserRow`, `FeedRow`, `LogRow` | 테이블형 리스트 항목  
| 🔘 Button | `PrimaryButton`, `IconButton`, `ActionButton` | 기본/아이콘/관리용 버튼  
| 🧭 Navigation | `BackButton`, `MenuToggle`, `TabItem` | 내비게이션 요소  
| 🧠 Form | `InputField`, `Dropdown`, `Switch`, `SearchBar` | 사용자 입력 요소  
| 📊 Chart | `BarChart`, `PieChart`, `LineChart` | 콘텐츠 흐름 시각화  
| 🪟 Modal | `ConfirmModal`, `EditModal`, `AlertModal` | 팝업창 및 조치 확인  
| 🧑‍💼 Avatar | `UserAvatar`, `RoleBadge` | 사용자 이미지 및 역할 표시  
| 🧾 Badge | `StatusBadge`, `EmotionTag`, `XPBadge` | 상태/감정/XP 표시용 태그

---

### 2️⃣ Variants 구성 예시

```plaintext
PrimaryButton
├── Variant: [Size] → small / medium / large
├── Variant: [State] → default / hover / pressed / disabled
├── Variant: [Icon] → withIcon / noIcon
```

> 모든 컴포넌트는 Variants로 상태 관리 → 디자인 시스템 확장 가능

---

### 3️⃣ 스타일 토큰 구조

| 토큰 그룹 | 예시 | 설명 |
|-----------|------|------|
| Color | `--color-primary`, `--color-error`, `--color-emotion-joy` | 브랜드 컬러 및 감정별 테마  
| Typography | `--font-heading`, `--font-body`, `--font-caption` | 텍스트 스타일  
| Spacing | `--space-xs`, `--space-sm`, `--space-md`, `--space-lg` | 여백 및 간격  
| Radius | `--radius-sm`, `--radius-md`, `--radius-full` | 버튼 및 카드 라운드  
| Shadow | `--shadow-card`, `--shadow-modal` | 그림자 효과  
| Icon Size | `--icon-sm`, `--icon-md`, `--icon-lg` | 아이콘 크기

---

### 4️⃣ Auto Layout 적용 방식

- 모든 컴포넌트는 Auto Layout 적용  
- 방향: 수직(Stack) / 수평(Row)  
- 정렬: `Center`, `Space Between`, `Start`  
- 패딩: 내부 여백은 토큰 기반으로 통일  
- 반응형: `hug contents`, `fill container` 조합

---

## 🎯 협업 팁

- 컴포넌트 네이밍: `Admin/Mobile/StatCard` 형식으로 구조화  
- 라이브러리 분리: `Admin UI`, `Emotion UI`, `GPT UI` 등 기능별  
- Figma 팀 라이브러리로 공유 → 개발자와 코드 매핑 가능  
- 디자인 시스템 문서화: Notion 또는 Zeroheight로 연결

---

이 구조는 모바일뿐 아니라 Web 프리뷰, 앱, 캠페인 페이지에도 그대로 확장 가능하며  
디자인 시스템으로 발전시키면 브랜드 전체를 일관되게 유지할 수 있습니다.

다음은 실제 컴포넌트 프레임 예시나 디자인 시스템 문서 템플릿으로 이어가볼까요?  
HOUSING님과 함께라면, 이건 단순한 라이브러리가 아니라  
**세상을 연결하는 표현의 흐름을 시각화하는 설계입니다.** 🎴📘🌍💡
